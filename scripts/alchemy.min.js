"use strict";!function(f,e,y){f.AO=f.AO||{},y(e).on("tinymce-editor-init",function(){AO.tinymce=AO.tinymce||{},AO.tinymce.initialSettings=tinyMCEPreInit.mceInit["alchemy-temp-editor"]}),y(function(){var e=y(".jsAlchemy"),s=y(".jsAlchemyMetaBox"),c=y(".jsAlchemyUserProfile");if(e){var a=y(".jsAlchemyOptions"),n=new URL(f.location.href).searchParams.get("page"),o=new FormData,l={},t=a.children(".jsAlchemyField"),i=[];if(t.each(function(e,a){var t=y(a);if("sections"===t.data("alchemy").type){var n=t.find(".jsAlchemySectionsTab").children(".jsAlchemyField");n[0]&&n.each(function(e,a){i.push(y(a))})}else i.push(t)}),e.on("click",".jsAlchemySaveOptions",function(){var a=y(this),e=y(i).map(function(e,a){var t=a.data("alchemy");return a.removeClass("alchemy__field--invalid").children(".jsAlchemyValidationTooltip").find(".jsAlchemyTooltipText").text(""),new Function("return AO['get_".concat(t.type,"_value']('").concat(t.id,"');"))(t.id)}).get();y.each(l,function(e,a){a.destroy()}),a.attr("disabled",!0).next(".jsAlchemyLoader").removeClass("alchemy__spinner--hidden");var t=AlchemyData["save-options"];a.data()&&"network"===a.data("type")&&(t=AlchemyData["save-network-options"]),Promise.all(e).then(function(e){o.append("_wpnonce",t.nonce),o.append("page-id",n),o.append("values",JSON.stringify(e)),y.ajax({method:"POST",url:t.url,dataType:"json",processData:!1,contentType:!1,data:o,success:function(){f.location.reload()},error:function(e){if(e.responseJSON.data&&"alch-save-validation-errors"===e.responseJSON.code){var s=e.responseJSON.data["invalid-fields"],c=0;y(i).each(function(e,a){var t=a.data("alchemy");if(s[t.id]){var n=a.children(".jsAlchemyValidationTooltip"),i=a.offset().top;c=-100+(c<i?i:c),n[0]&&(n.attr("data-show",!0).find(".jsAlchemyTooltipText").text(s[t.id]),a.addClass("alchemy__field--invalid").parents(".repeatee").addClass("repeatee--expanded"),l[t.id]=Popper.createPopper(a[0],n[0],{placement:"top",modifiers:[{name:"flip",options:{fallbackPlacements:["top-start"]}}]}),a.one("hover focus",function(){a.hasClass("alchemy__field--invalid")&&(a.removeClass("alchemy__field--invalid"),l[t.id]&&(l[t.id].destroy(),n.removeAttr("data-show")))}),c&&y("html").add("body").animate({scrollTop:c},500))}})}a.next(".jsAlchemyLoader").addClass("alchemy__spinner--hidden")},complete:function(){a.removeAttr("disabled")}})})}),s[0]){var d=y("#post"),r=s.closest(".postbox");if(r.find(".hndle").removeClass("hndle"),r.find(".handle-order-higher").remove(),r.find(".handle-order-lower").remove(),d[0])y("#publish").one("click",function(e){var a=y(this);a.attr("disabled",!0),u(a),e.preventDefault()});else if(wp.data&&wp.data.subscribe){var p=!0;wp.data.subscribe(function(){wp.data.select("core/editor").isSavingPost()?p=!1:p||(u(),p=!0)})}}if(c[0]){var h=y("#your-profile"),m=!1;h[0]&&h.on("submit",function(e){if(m)h.find('[type="submit"]').removeAttr("disabled").addClass("disabled").click();else{var a=c.children(".jsAlchemyField"),i=[];h.find('[type="submit"]').attr("disabled",!0),a.each(function(e,a){var t=y(a);if("sections"===t.data("alchemy").type){var n=t.find(".jsAlchemySectionsTab").children(".jsAlchemyField");n[0]&&n.each(function(e,a){i.push(y(a))})}else i.push(t)});var t=y(i).map(function(e,a){var t=y(a).data("alchemy");return new Function("return AO['get_".concat(t.type,"_value']('").concat(t.id,"');"))(t.id)}).get(),n=AlchemyData["save-user-profile"];Promise.all(t).then(function(e){o.append("_wpnonce",n.nonce),o.append("user-id",n.userID),o.append("values",JSON.stringify(e)),y.ajax({method:"POST",url:n.url,dataType:"json",processData:!1,contentType:!1,data:o,success:function(){h.submit()}})}),e.preventDefault()}m=!0})}}function u(a){var e=s.children(".metabox__fields").children(".jsAlchemyField"),i=[];e.each(function(e,a){var t=y(a);if("sections"===t.data("alchemy").type){var n=t.find(".jsAlchemySectionsTab").children(".jsAlchemyField");n[0]&&n.each(function(e,a){i.push(y(a))})}else i.push(t)});var t=y(i).map(function(e,a){var t=y(a).data("alchemy");return new Function("return AO['get_".concat(t.type,"_value']('").concat(t.id,"');"))(t.id)}).get(),n=AlchemyData["save-metaboxes"];Promise.all(t).then(function(e){o.append("_wpnonce",n.nonce),o.append("post-id",n.postID),o.append("values",JSON.stringify(e)),y.ajax({method:"POST",url:n.url,dataType:"json",processData:!1,contentType:!1,data:o,success:function(){a&&a[0]&&a.removeAttr("disabled").click()}})})}})}(window,document,jQuery);
//# sourceMappingURL=alchemy.min.js.map