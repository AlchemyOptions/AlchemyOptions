{"version":3,"sources":["fields/repeater/scripts.js"],"names":["window","document","$","Promise","values","alchemy","neededTypeFields","each","i","repeatee","hasTypes","l","item","type","meta","id","fields","k","value","jQuery","AO","$repeaters","addRepeateeData","AlchemyRepeatersData","cloneRepeateeData","miscRepeaterData","currentUrl","searchParams","get","href","pageID","repeater","$repeateesContainer","repeateesCount","$repeater","children","$trigger","length","data","e","repeaterData","this","next","FormData","attr","removeClass","append","nonce","processData","title","success","ajax","response","$response","$document","trigger","complete","$toolbar","closest","removeAttr","addClass","$repeatee","stopPropagation","hasClass","on","handle_hide_repeatee","$parent","fadeOut","remove","_this","metaData","$repeatees","map","toggleClass","repeateeFields","visible","label","correct_ids","JSON","field","Function","concat","all","then","after","stringify","method","url","dataType","contentType","click","repeateeMeta","sortable","siblings","$list","event","tinymce","save_editors","disableSelection","$select","placeholder","input","$input","val","option","text","start","ui","find","height","helper","restore_editors","select2","target","params","handle_delete_repeatee","change","blur","get_repeater_value","filter","resolve","valuesData"],"mappings":"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","file":"fields\\repeater\\scripts.min.js","sourcesContent":["\"use strict\";\n\n(function(window, document, $){\n    window.AO = window.AO || {};\n\n    $(() => {\n        const $repeaters = $('.jsAlchemyRepeaterField');\n\n        if( ! $repeaters[0] ) {\n            return;\n        }\n\n        const $document = $(document);\n        const addRepeateeData = AlchemyRepeatersData['add-repeatee'];\n        const cloneRepeateeData = AlchemyRepeatersData['clone-repeatee'];\n        const miscRepeaterData = AlchemyRepeatersData['misc'];\n        const currentUrl = new URL(window.location.href);\n        const pageID = currentUrl.searchParams.get('page') || currentUrl.searchParams.get('post');\n\n        $repeaters.each((i, repeater) => {\n            const $repeater = $(repeater);\n            const $repeateesContainer = $repeater.children('.field__content').children('.jsAlchemyRepeaterItems');\n\n            let repeateesCount = $repeateesContainer.children('.jsAlchemyRepeatee').length;\n\n            $repeater.on('click', '.jsAlchemyAddRepeatee', function(e){\n                e.stopPropagation();\n\n                const $trigger = $(this);\n                const $repeater = $trigger.closest('.jsAlchemyRepeaterField');\n                const alchemy = $repeater.data('alchemy');\n                const repeaterData = $trigger.data('repeater');\n                const $repeateesContainer = $repeater.children('.field__content').children('.jsAlchemyRepeaterItems');\n                const data = new FormData();\n\n                $trigger.attr('disabled', true).next('.jsAlchemyRepeaterLoader').removeClass('alchemy__spinner--hidden');\n\n                data.append('_wpnonce', addRepeateeData.nonce);\n                data.append('page-id', pageID);\n                data.append('repeatees-number', ++repeateesCount);\n                data.append('id', alchemy['id']);\n                data.append('repeater-id', alchemy['repeater-id']);\n\n                if( repeaterData && repeaterData['type'] ) {\n                    data.append('type-id', repeaterData['type'].id);\n                    data.append('type-title', repeaterData['type'].title);\n                }\n\n                $.ajax({\n                    method: \"POST\",\n                    url: addRepeateeData.url,\n                    dataType: 'json',\n                    processData: false,\n                    contentType: false,\n                    data: data,\n                    success: response => {\n                        if( response.success && response.data ) {\n                            const $response = $(response.data);\n\n                            $repeateesContainer.append($response);\n\n                            $document.trigger('alch_repeatee_added', {\n                                repeater: $repeater,\n                                repeatee: $response,\n                            });\n                        }\n                    },\n                    complete: () => {\n                        $document.click();\n                        $trigger.removeAttr('disabled').next('.jsAlchemyRepeaterLoader').addClass('alchemy__spinner--hidden');\n                    }\n                });\n            });\n\n            $repeater.on('click', '.jsAlchemyRepeateeToolbar', function(e) {\n                e.stopPropagation();\n\n                $document.click();\n\n                const $toolbar = $(this);\n                const $repeatee = $toolbar.closest( '.repeatee' );\n\n                if( $repeatee.hasClass('repeatee--expanded') ) {\n                    $repeatee.removeClass('repeatee--expanded');\n\n                    $document.trigger('alch_repeatee_closed', {\n                        repeater: $repeater,\n                        repeatee: $repeatee,\n                    });\n                } else {\n                    $repeatee.addClass('repeatee--expanded');\n\n                    $document.trigger('alch_repeatee_opened', {\n                        repeater: $repeater,\n                        repeatee: $repeatee,\n                    });\n                }\n            });\n\n            $repeater.on('click', '.jsAlchemyRepeateeRemove', function() {\n                const $toolbar = $(this);\n                const $parent = $toolbar.closest( '.repeatee' );\n\n                $parent.fadeOut(() => {\n                    $parent.remove();\n                });\n            });\n\n            $repeater.on('click', '.jsAlchemyRepeateeAction', function(e) {\n                e.stopPropagation();\n\n                const $trigger = $(this);\n                const $repeatee = $trigger.closest( '.repeatee' );\n\n                switch( $trigger.data('action') ) {\n                    case 'hide' :\n                        handle_hide_repeatee( $trigger, $repeatee );\n                    break;\n                    case 'clone' :\n                        (() => {\n                            e.stopPropagation();\n\n                            const $trigger = $(this);\n                            const $repeater = $trigger.closest('.jsAlchemyRepeaterField');\n                            const alchemy = $repeater.data('alchemy');\n                            const data = new FormData();\n\n                            $trigger.attr('disabled', true).next('.jsAlchemyRepeaterLoader').removeClass('alchemy__spinner--hidden');\n\n                            data.append('_wpnonce', cloneRepeateeData.nonce);\n                            data.append('page-id', pageID);\n                            data.append('repeatees-number', ++repeateesCount);\n                            data.append('id', alchemy['id']);\n                            data.append('repeater-id', alchemy['repeater-id']);\n\n                            const repeateeFields = $repeatee.children('.repeatee__fields').children('.jsAlchemyField').map((k, field) => {\n                                const alchemy = $(field).data('alchemy');\n\n                                return new Function( `return AO['get_${alchemy.type}_value']('${alchemy.id}');` )(alchemy.id)\n                            }).get()\n\n                            Promise.all(repeateeFields).then(values => {\n                                const meta = $.extend({}, $repeatee.data('meta'));\n\n                                meta.label = meta.label ? `${meta.label} copy` : '';\n\n                                if( meta['title'] && meta['id'] ) {\n                                    data.append('type-id', meta['id']);\n                                    data.append('type-title', meta['title']);\n                                }\n\n                                values = correct_ids( alchemy, [{\n                                    'meta': meta,\n                                    'values': values\n                                }] )\n\n                                data.append('values', JSON.stringify(values));\n\n                                $.ajax({\n                                    method: \"POST\",\n                                    url: cloneRepeateeData.url,\n                                    dataType: 'json',\n                                    processData: false,\n                                    contentType: false,\n                                    data: data,\n                                    success: response => {\n                                        if( response.success && response.data ) {\n                                            const $response = $(response.data);\n\n                                            $repeatee.after($response);\n\n                                            $document.trigger('alch_repeatee_added', {\n                                                repeater: $repeater,\n                                                repeatee: $response,\n                                            });\n                                        }\n                                    },\n                                    complete: () => {\n                                        $document.click();\n                                        $trigger.removeAttr('disabled').next('.jsAlchemyRepeaterLoader').addClass('alchemy__spinner--hidden');\n                                    }\n                                });\n                            });\n                        })();\n                    break;\n                    case 'delete' :\n                        handle_delete_repeatee( $repeatee );\n                    break;\n                }\n            });\n\n            $repeater.on('click', '.jsAlchemyRepeaterTypeTrigger', function(e){\n                const $trigger = $(this);\n                const $parent = $trigger.closest('.repeater__add-from-type');\n                const $list = $trigger.siblings('.jsAlchemyRepeaterFieldTypes');\n\n                e.stopPropagation();\n\n                $parent.addClass('repeater__add-new--active');\n                $list.addClass('repeater__field-types--visible');\n\n                $document.one('click', function() {\n                    $parent.removeClass('repeater__add-new--active');\n                    $list.removeClass('repeater__field-types--visible');\n                });\n            });\n\n            $repeater.on('click', '.jsAlchemyRepeaterFieldTypes', function(e){\n                e.stopPropagation();\n            });\n\n            $repeater.on({\n                'input': function() {\n                    const $input = $(this);\n                    const $repeatee = $input.closest( '.repeatee' );\n                    const metaData = $repeatee.data('meta');\n                    const value = $input.val();\n\n                    metaData.label = value;\n                    $input.prev('.jsRepeateeTitleText').text(value);\n                },\n                'click': e => {\n                    e.stopPropagation();\n                }\n            }, '.jsRepeateeTitle');\n\n            $repeateesContainer.sortable({\n                placeholder: \"repeatee--placeholder\",\n                opacity: 0.8,\n                axis: \"y\",\n                handle: \".jsRepeateeDndHandle\",\n                start: (event, ui) => {\n                    $repeateesContainer.find('.repeatee--placeholder').height(ui.helper.height() - 2);\n\n                    AO.tinymce.save_editors( $('.jsAlchemyEditor', $repeater) );\n                },\n                stop: () => {\n                    AO.tinymce.restore_editors( $('.jsAlchemyEditor', $repeater) );\n                }\n            });\n\n            $repeateesContainer.disableSelection();\n\n            const $select = $repeater.find('.jsAlchRepeaterSelect').children('select');\n            const placeholder = miscRepeaterData['add-from-type'] ? miscRepeaterData['add-from-type'] : 'Add from type';\n\n\t\t\t$select.select2({ placeholder }).on('select2:select', e => {\n\t\t\t\t$document.click();\n\n\t\t\t\tconst $trigger = $(e.target);\n\t\t\t\tconst option = $trigger.children(`[value=\"${e.params.data.id}\"]`);\n\t\t\t\tconst $repeater = $trigger.closest('.jsAlchemyRepeaterField');\n\t\t\t\tconst alchemy = $repeater.data('alchemy');\n\t\t\t\tconst repeaterData = option.data('repeater');\n\t\t\t\tconst $repeateesContainer = $repeater.children('.field__content').children('.jsAlchemyRepeaterItems');\n\t\t\t\tconst data = new FormData();\n\n\t\t\t\t$trigger.siblings('.jsAlchemyRepeaterLoader').removeClass('alchemy__spinner--hidden');\n\n\t\t\t\tdata.append('_wpnonce', addRepeateeData.nonce);\n\t\t\t\tdata.append('page-id', pageID);\n\t\t\t\tdata.append('repeatees-number', ++repeateesCount);\n\t\t\t\tdata.append('id', alchemy['id']);\n\t\t\t\tdata.append('repeater-id', alchemy['repeater-id']);\n\n\t\t\t\tif( repeaterData && repeaterData['type'] ) {\n\t\t\t\t\tdata.append('type-id', repeaterData['type'].id);\n\t\t\t\t\tdata.append('type-title', repeaterData['type'].title);\n\t\t\t\t}\n\n\t\t\t\t$.ajax({\n\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\turl: addRepeateeData.url,\n\t\t\t\t\tdataType: 'json',\n\t\t\t\t\tprocessData: false,\n\t\t\t\t\tcontentType: false,\n\t\t\t\t\tdata: data,\n\t\t\t\t\tsuccess: response => {\n\t\t\t\t\t\tif( response.success && response.data ) {\n\t\t\t\t\t\t\tconst $response = $(response.data);\n\n\t\t\t\t\t\t\t$repeateesContainer.append($response);\n\n                            $document.trigger('alch_repeatee_added', {\n                                repeater: $repeater,\n                                repeatee: $response,\n                            });\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tcomplete: () => {\n\t\t\t\t\t\t$trigger.removeAttr('disabled').val(\"\").change().blur().siblings('.jsAlchemyRepeaterLoader').addClass('alchemy__spinner--hidden');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n        });\n    });\n\n    function handle_hide_repeatee( $trigger, $repeatee ) {\n        const metaData = $repeatee.data('meta');\n\n        $trigger.toggleClass('repeatee__btn--active');\n        $trigger.find('span').toggleClass('dashicons-visibility').toggleClass('dashicons-hidden');\n\n        $repeatee.removeAttr('style').toggleClass('repeatee--hidden');\n\n        metaData.visible = ( 'undefined' === typeof metaData.visible ) ? false : ! metaData.visible;\n    }\n\n    function handle_delete_repeatee( $repeatee ) {\n        $repeatee.fadeOut(() => {\n            $repeatee.remove();\n        });\n    }\n\n    function correct_ids( alchemy, values ) {\n        const hasTypes = typeof( alchemy['fields-data']['field-types'] ) !== 'undefined';\n\n        let neededTypeFields = alchemy['fields-data']['fields'];\n\n        $.each(values, (i, repeatee) => {\n            if( ! hasTypes ) {\n                $.each(repeatee.values, (k, value) => {\n                    value['id'] = neededTypeFields[k]['id'];\n                });\n            } else {\n                $.each(alchemy['fields-data']['field-types'], (l, item) => {\n                    if( item.type === repeatee.meta.id ) {\n                        neededTypeFields = item.fields\n                    }\n                });\n\n                $.each(repeatee.values, (k, value) => {\n                    value['id'] = neededTypeFields[k]['id'];\n                });\n            }\n        });\n\n        return values;\n    }\n\n    AO.get_repeater_value = id => {\n        const $repeaters = $('.jsAlchemyRepeaterField');\n        const $parent = $repeaters.filter((i, repeater) => {\n            return id === $(repeater).data('alchemy')['id'];\n        });\n\n        const $repeatees = $parent.children('.field__content').children('.jsAlchemyRepeaterItems').children('.jsAlchemyRepeatee');\n\n        const values = $repeatees.map((i, repeatee) => {\n            const $repeatee = $(repeatee);\n            const repeateeMeta = $repeatee.data('meta');\n            const repeateeFields = $repeatee.children('.repeatee__fields').children('.jsAlchemyField').map((k, field) => {\n                const alchemy = $(field).data('alchemy');\n\n                return new Function( `return AO['get_${alchemy.type}_value']('${alchemy.id}');` )(alchemy.id)\n            }).get()\n\n            return Promise.all(repeateeFields).then(values => {\n                return Promise.resolve( {\n                    meta: repeateeMeta,\n                    values: values\n                } );\n            });\n        }).get();\n\n        return Promise.all(values).then(valuesData => {\n            return Promise.resolve( {\n                'type': `repeater:${$parent.data('alchemy')['repeater-id']}`,\n                'id': id,\n                'value': correct_ids( $parent.data('alchemy'), valuesData )\n            } );\n        });\n    };\n})(window, document, jQuery);\n"]}